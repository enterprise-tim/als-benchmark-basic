name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["AsyncLocalStorage Benchmark"]
    types:
      - completed
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest-4-cores
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download benchmark artifacts
      if: github.event_name == 'workflow_run'
      uses: actions/download-artifact@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
        path: ./downloaded-artifacts
        pattern: 'benchmark-results-node-*'
      continue-on-error: true
    
    - name: Download version comparison artifact
      if: github.event_name == 'workflow_run'
      uses: actions/download-artifact@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
        path: ./downloaded-comparison
        pattern: 'version-comparison'
      continue-on-error: true
    
    - name: Debug downloaded artifacts
      if: github.event_name == 'workflow_run'
      run: |
        echo "🔍 Debugging downloaded artifacts..."
        echo "Individual benchmark artifacts:"
        ls -la ./downloaded-artifacts/ || echo "No individual artifacts found"
        echo ""
        echo "Version comparison artifact:"
        ls -la ./downloaded-comparison/ || echo "No comparison artifact found"
        echo ""
        echo "Available artifacts in workflow run:"
        gh api repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/artifacts --jq '.artifacts[] | {name: .name, size: .size_in_bytes, created: .created_at}'
    
    - name: Download benchmark artifacts (manual dispatch)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/download-artifact@v4
      with:
        name: version-comparison
        path: ./downloaded-artifacts
    
    - name: Prepare benchmark data
      run: |
        echo "📊 Preparing benchmark data for site build..."
        
        # Create results directory structure
        mkdir -p results/versions
        
        # Process downloaded benchmark artifacts (individual version results)
        if [ -d "./downloaded-artifacts" ]; then
          echo "Processing individual benchmark artifacts..."
          
          # Copy version-specific results
          for artifact in downloaded-artifacts/*/; do
            if [ -d "$artifact" ]; then
              echo "Processing artifact: $artifact"
              # Extract version from artifact name
              version_name=$(basename "$artifact" | sed 's/benchmark-results-node-//')
              target_dir="results/versions/node_$version_name"
              
              echo "Copying to: $target_dir"
              mkdir -p "$target_dir"
              cp -r "$artifact"/* "$target_dir/" 2>/dev/null || true
            fi
          done
        fi
        
        # Process version comparison artifact (if available)
        if [ -d "./downloaded-comparison" ]; then
          echo "Processing version comparison artifact..."
          
          # Copy the results and docs from the comparison artifact
          if [ -d "./downloaded-comparison/results" ]; then
            echo "Copying comparison results..."
            cp -r ./downloaded-comparison/results/* results/ 2>/dev/null || true
          fi
          
          if [ -d "./downloaded-comparison/docs" ]; then
            echo "Copying comparison docs..."
            cp -r ./downloaded-comparison/docs/* docs/ 2>/dev/null || true
          fi
        fi
        
        # Generate reports from the downloaded data
        if [ -d "results/versions" ] && [ "$(ls -A results/versions)" ]; then
          echo "Found benchmark data, generating reports..."
          npm run compare-versions || echo "Version comparison failed, continuing with build"
          npm run generate-report || echo "Report generation failed, continuing with build"
        else
          echo "No benchmark data found, using existing data if available..."
        fi
        
        # Ensure we have the main site files
        if [ ! -f "docs/index.html" ]; then
          echo "No existing docs, will build fresh site..."
        fi
        
        # List what we have for debugging
        echo "Final results directory contents:"
        ls -la results/ || echo "No results directory"
        echo "Final docs directory contents:"
        ls -la docs/ || echo "No docs directory"

    - name: Build React application
      run: |
        echo "🔨 Building React application..."
        npm run build
        
        echo "📁 Build output contents:"
        ls -la dist/
        
        # Copy any additional data files to dist
        if [ -d "results" ]; then
          echo "📊 Copying benchmark results to build output..."
          cp -r results dist/
        fi
        
        if [ -d "docs" ]; then
          echo "📚 Copying documentation to build output..."
          cp -r docs dist/
        fi
        
        echo "🎯 Final build output:"
        ls -la dist/

    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: github-pages-build
        path: dist/
        retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest-4-cores
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: github-pages-build
        path: ./dist
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
