name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["AsyncLocalStorage Benchmark"]
    types:
      - completed
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download benchmark artifacts
      if: github.event_name == 'workflow_run'
      uses: actions/download-artifact@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
        path: ./downloaded-artifacts
    
    - name: Download benchmark artifacts (manual dispatch)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/download-artifact@v4
      with:
        name: version-comparison
        path: ./downloaded-artifacts
    
    - name: Prepare site data
      run: |
        # Create docs directory and copy existing site
        mkdir -p docs
        
        # Copy the existing sophisticated site
        cp docs/index.html docs/index.html.bak 2>/dev/null || true
        cp docs/*.html docs/ 2>/dev/null || true
        cp docs/*.md docs/ 2>/dev/null || true
        
        # Process downloaded artifacts
        if [ -d "./downloaded-artifacts" ]; then
          echo "Processing benchmark artifacts..."
          
          # Find and copy all benchmark results
          find ./downloaded-artifacts -name "*.json" -exec cp {} docs/ \;
          find ./downloaded-artifacts -name "*.md" -exec cp {} docs/ \;
          
          # If we have version comparison data, use it
          if [ -f "./downloaded-artifacts/version-comparison/docs/chart-data.json" ]; then
            cp ./downloaded-artifacts/version-comparison/docs/* docs/ 2>/dev/null || true
          fi
          
          # Generate reports from the downloaded data
          if [ -f "docs/detailed-results.json" ] || [ -f "docs/chart-data.json" ]; then
            echo "Found benchmark data, generating reports..."
            node src/report-generator.js || echo "Report generator failed, using existing data"
          fi
        else
          echo "No benchmark artifacts found, running fresh benchmarks..."
          npm run benchmark
          npm run memory-test
          npm run generate-report
        fi
        
        # Ensure we have the main site file
        if [ ! -f "docs/index.html" ]; then
          echo "Copying main site template..."
          cp docs/index.html docs/index.html 2>/dev/null || node src/generate-docs.js
        fi
        
        # List what we have for debugging
        echo "Final docs directory contents:"
        ls -la docs/

    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: github-pages-build
        path: docs/
        retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: github-pages-build
        path: ./docs
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
